package controller;

import dbQueries.UserQueries;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.Stage;
import languages.LanguageManager;
import utilities.AlertManager;
import java.io.IOException;
import java.time.ZoneId;

/**
 * This LoginController class serves as the primary controller for the user login process in the Login.fxml file.
 * It is responsible for managing and handling all user input and interactions in order to
 * establish a successful login session
 **/
public class Login {
    public Label timeZoneDescLabel;
    public Label timeZoneLabel;
    public Label usernameLabel;
    public TextField usernameTextField;
    public Label passwordLabel;
    public PasswordField passwordField;
    public Button loginButton;
    Stage scheduleStage = new Stage();
    Scene scheduleScene;
    private boolean access = false;

    /**
     * This method initializes the Login view by setting text labels
     * using language translation and setting the default system time zone.
     */
    @FXML
    private void initialize() {
        timeZoneDescLabel.setText(LanguageManager.getTranslation("Time_Zone"));
        timeZoneLabel.setText(ZoneId.systemDefault().toString());
        usernameLabel.setText(LanguageManager.getTranslation("Username"));
        passwordLabel.setText(LanguageManager.getTranslation("Password"));
        loginButton.setText(LanguageManager.getTranslation("Login"));
    }

    /**
     * This method closes the current stage corresponding to the ActionEvent passed as a parameter.
     * The stage is closed by removing it from the application window and deleting any
     * associated resources and data structures.
     *
     * @param event the ActionEvent that is generated when an action occurs on the UI element bound to this method.
     */
    public void closeLogin(ActionEvent event) {
        Stage currentStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
        currentStage.close();
    }

    /**
     * This method is called when the user clicks on the login button.
     * It verifies that the username and password fields are
     * not empty and tries to log the user in using the UserQueries.tryLogin method.
     * If the login is successful, the schedule view is opened.
     *
     * @param actionEvent - The event generated by clicking on the login button.
     * @throws IOException If the view cannot be loaded.
     */
    public void onLoginButton(ActionEvent actionEvent) throws IOException {
        if (usernameTextField.getText().isEmpty() || passwordField.getText().isEmpty()) {
            // check for empty fields
            AlertManager.showAlert("Missing_Credentials", "Message");
        } else {
            if (UserQueries.validateCredentials(usernameTextField.getText(), passwordField.getText())) {
                // try to log the user in
                access = true;
            }

            if (access) { // if the user is logged in, open the schedule view
                FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/view/Schedule.fxml"));
                Parent root = fxmlLoader.load();
                scheduleScene = new Scene(root);
                scheduleStage.setScene(scheduleScene);
                scheduleStage.setTitle(LanguageManager.getTranslation("Schedule"));
                scheduleStage.setResizable(false);
                scheduleStage.show();
                closeLogin(actionEvent);
            }
        }
    }
}
